#%RAML 0.8
title: List of Links
documentation:
  - title: Introduction
    content: |
      This API provides full access to the List of Links database.
      All requests and responses are in the form of application/json.

version: v1
protocols: [ HTTPS ]
baseUri: https://api.listoflinks.co
mediaType: application/json
/user:
  description: |
    Routes to access data about ListOfLinks Users
  displayName: User
  post:
    description: |
      Create a new User
    body:
      application/json:
        formParameters:
          username:
            description: username of the new User to be created
            required: true
          name:
            description: name of the new User to be created
            required: true
          image:
            description: image for the new User to be created
            required: true
          email:
            description: email for the new User to be created
            required: true
          password: 
            description: a hash of the users typed password
            required: true
    responses:
      200:
        body:
          application/json:
            example: |
              {
                success: true
              }
      404:
        body:
          application/json:
            example: |
              {
                error : "User not found"
              }
  /{id}:
    get:
      description: |
        Get user data by id. Passing the username in as the id is also accepted.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  id: "2",
                  username: "janedoe",
                  name: "Jane Doe",
                  image: "https://assets.pubpub.org/picture.jpg",
                  links: [
                    {
                      description: "My new link",
                      url: "http://www.link.com"
                    },
                    {
                      description: "Another link",
                      url: "http://www.link2.com"
                    }
                  ],
                  following: [
                    {
                      id: 2,
                      username: "john",
                      name: "John Micahels",
                      image: "www.myimage.com",
                      Follow: {
                        lastRead: "2016-09-07T18:06:52.655Z",
                        createdAt: "2016-09-07T18:06:52.655Z",
                        updatedAt: "2016-09-07T18:06:52.655Z",
                        follower: 1,
                        followee: 2
                      },
                      links: [
                        {
                          description: "My new link",
                          url: "http://www.link.com"
                        },
                        {
                          description: "Another link",
                          url: "http://www.link2.com"
                        }
                      ]
                    }
                  ],
                  followers: [
                    {
                      id: 2,
                      username: "john",
                      name: "John Micahels",
                      image: "www.myimage.com",
                      Follow: {
                        lastRead: "2016-09-07T18:06:52.655Z",
                        createdAt: "2016-09-07T18:06:52.655Z",
                        updatedAt: "2016-09-07T18:06:52.655Z",
                        follower: 2,
                        followee: 1
                      }
                    }
                  ]
                }
        404:
          body:
            application/json:
              example: |
                {
                  error : "User not found"
                }
    put:
      description: |
        Update the user with the given id
      body:
        application/json:
          formParameters:
            username:
              description: new username to update
            name:
              description: new name to update
            image:
              description: new image to update
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  id: "2",
                  username: "janedoe",
                  name: "Jane Doe",
                  image: "https://assets.pubpub.org/picture.jpg",
                }
        404:
          body:
            application/json:
              example: |
                {
                  error : "User not found"
                }
    delete:
      description: |
        Delete the user with the given id
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  success: true
                }
        404:
          body:
            application/json:
              example: |
                {
                  error : "User not found"
                }
/search/{string}:
  get:
    description: |
      Search for users by name and username
    responses:
      200:
        body:
          application/json:
            example: |
              [{
                id: "2",
                username: "janedoe",
                name: "Jane Doe",
                image: "https://assets.pubpub.org/picture.jpg",
              }]
      404:
        body:
          application/json:
            example: |
              {
                error : "Error"
              }  
/recent:
  get:
    description: |
      List of users who have recently posted links
    responses:
      200:
        body:
          application/json:
            example: |
              [{
                id: "2",
                username: "janedoe",
                name: "Jane Doe",
                image: "https://assets.pubpub.org/picture.jpg",
              }]
      404:
        body:
          application/json:
            example: |
              {
                error : "Error"
              }  
/link:
  description: |
    Routes to access data about ListOfLinks Link
  displayName: Link
  post:
    description: |
      Create a new Link
    body:
      application/json:
        formParameters:
          UserId:
            description: id of the User creating the link
            required: true
          description:
            description: description of the Link to be created
            required: true
          url:
            description: url of the new Link to be created
            required: true
    responses:
      200:
        body:
          application/json:
            example: |
              {
                description: "Another link",
                url: "http://www.link2.com"
              }
      404:
        body:
          application/json:
            example: |
              {
                success: false
              }
  /{id}:
    put:
      description: |
        Edit a link
      body:
        application/json:
          formParameters:
            descritpion:
              description: updated descritpion of Link to be updated
            url:
              description: updated url of the Link to be updated
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  success: true
                }
        404:
          body:
            application/json:
              example: |
                {
                  success: false
                }
    delete:
      description: |
        Delete a Link
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  success: true
                }
        404:
          body:
            application/json:
              example: |
                {
                  success: false
                }
/follow:
  description: |
    Routes to access data about ListOfLinks Follow
  displayName: Follow
  post:
    description: |
      Create a new Follow
    body:
      application/json:
        formParameters:
          follower:
            description: id of the follower. Can be passed in through session data.
          followee:
            description: id of the User who is being followed
            required: true
    responses:
      200:
        body:
          application/json:
            example: |
              {
                id: 2,
                username: "john",
                name: "John Micahels",
                image: "www.myimage.com",
                Follow: {
                  lastRead: "2016-09-07T18:06:52.655Z",
                  createdAt: "2016-09-07T18:06:52.655Z",
                  updatedAt: "2016-09-07T18:06:52.655Z",
                  follower: 1,
                  followee: 2
                },
                links: [
                  {
                    description: "My new link",
                    url: "http://www.link.com"
                  },
                  {
                    description: "Another link",
                    url: "http://www.link2.com"
                  }
                ]
              }
      404:
        body:
          application/json:
            example: |
              {
                success: false
              }
  put:
      description: |
        Update the lastRead value of a Follow by follower and followee
      body:
        application/json:
          formParameters:
            follower:
              description: id of the follower. Can be passed in through session data.
              type: integer
            followee:
              description: id of the followee
              type: integer
            lastRead:
              description: date the follower last viewed the profile of the followee
              type: date
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  success: true
                }
        404:
          body:
            application/json:
              example: |
                {
                  success: false
                }
  delete:
      description: |
        Delete a follow
      body:
        application/json:
          formParameters:
            follower:
              description: id of the follower. Can be passed in through session data.
              type: integer
            followee:
              description: id of the followee
              type: integer
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  success: true
                }
        404:
          body:
            application/json:
              example: |
                {
                  success: false
                }
/login:
  description: |
    Routes to access login data and functionality
  displayName: Login
  get:
    description: |
      Get login data from browser cookie
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  id: "2",
                  username: "janedoe",
                  name: "Jane Doe",
                  image: "https://assets.pubpub.org/picture.jpg",
                  links: [
                    {
                      description: "My new link",
                      url: "http://www.link.com"
                    },
                    {
                      description: "Another link",
                      url: "http://www.link2.com"
                    }
                  ],
                  following: [
                    {
                      id: 2,
                      username: "john",
                      name: "John Micahels",
                      image: "www.myimage.com",
                      Follow: {
                        inactive: null,
                        createdAt: "2016-09-07T18:06:52.655Z",
                        updatedAt: "2016-09-07T18:06:52.655Z",
                        follower: 1,
                        followee: 2
                      },
                      links: [
                        {
                          description: "My new link",
                          url: "http://www.link.com"
                        },
                        {
                          description: "Another link",
                          url: "http://www.link2.com"
                        }
                      ]
                    }
                  ],
                  followers: [
                    {
                      id: 2,
                      username: "john",
                      name: "John Micahels",
                      image: "www.myimage.com",
                      Follow: {
                        inactive: null,
                        createdAt: "2016-09-07T18:06:52.655Z",
                        updatedAt: "2016-09-07T18:06:52.655Z",
                        follower: 2,
                        followee: 1
                      }
                    }
                  ]
                }
      404:
        body:
          application/json:
            example: |
              {
                null
              }
  post:
    description: |
      Get login data from username and password
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  id: "2",
                  username: "janedoe",
                  name: "Jane Doe",
                  image: "https://assets.pubpub.org/picture.jpg",
                  links: [
                    {
                      description: "My new link",
                      url: "http://www.link.com"
                    },
                    {
                      description: "Another link",
                      url: "http://www.link2.com"
                    }
                  ],
                  following: [
                    {
                      id: 2,
                      username: "john",
                      name: "John Micahels",
                      image: "www.myimage.com",
                      followerLinks: {
                        lastRead: "2016-09-07T18:06:52.655Z",
                        createdAt: "2016-09-07T18:06:52.655Z",
                        updatedAt: "2016-09-07T18:06:52.655Z",
                        follower: 1,
                        followee: 2
                      }
                    }
                  ],
                  followers: [
                    {
                      id: 2,
                      username: "john",
                      name: "John Micahels",
                      image: "www.myimage.com",
                      Follow: {
                        lastRead: "2016-09-07T18:06:52.655Z",
                        createdAt: "2016-09-07T18:06:52.655Z",
                        updatedAt: "2016-09-07T18:06:52.655Z",
                        follower: 2,
                        followee: 1
                      }
                    }
                  ]
                }
      500:
        body:
          application/json:
            example: |
              {
                success: false
              }
/logout:
  description: |
    Route to logout a user
  displayName: Login
  get:
    description: |
      Logout a user.
    responses:
      200:
        body:
          application/json:
            example: |
              {
                success:true
              }
      401:
        body:
          application/json:
            example: |
              {
                Unauthorized
              }